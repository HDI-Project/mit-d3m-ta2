{
    "created": "2019-11-20T15:09:32.771246Z",
    "id": "ta1-perspecta-pipeline-acled-rfsel",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.6.produce",
            "name": "output predictions"
        }
    ],
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "steps": [
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "name": "Extract a DataFrame from a Dataset",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "columns": {
                    "data": [
                        6
                    ],
                    "type": "VALUE"
                },
                "semantic_types": {
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/Attribute"
                    ],
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "3002bc5b-fa47-4a3d-882e-a8b5f3d756aa",
                "name": "Remove semantic types from columns",
                "python_path": "d3m.primitives.data_transformation.remove_semantic_types.DataFrameCommon",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.1.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "name": "Parses strings into their types",
                "python_path": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
                "version": "0.5.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "return_result": {
                    "data": "replace",
                    "type": "VALUE"
                },
                "use_semantic_types": {
                    "data": true,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                "name": "sklearn.impute.SimpleImputer",
                "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
                "version": "2019.6.7"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "semantic_types": {
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ],
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "name": "Extracts columns by semantic type",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                "version": "0.2.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "add_index_columns": {
                    "data": false,
                    "type": "VALUE"
                },
                "bootstrap": {
                    "data": true,
                    "type": "VALUE"
                },
                "class_weight": {
                    "data": {
                        "case": "str",
                        "value": "balanced"
                    },
                    "type": "VALUE"
                },
                "criterion": {
                    "data": "gini",
                    "type": "VALUE"
                },
                "error_on_no_input": {
                    "data": true,
                    "type": "VALUE"
                },
                "exclude_input_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "exclude_output_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "max_depth": {
                    "data": {
                        "case": "int",
                        "value": 10
                    },
                    "type": "VALUE"
                },
                "max_features": {
                    "data": {
                        "case": "calculated",
                        "value": "auto"
                    },
                    "type": "VALUE"
                },
                "max_leaf_nodes": {
                    "data": {
                        "case": "none",
                        "value": null
                    },
                    "type": "VALUE"
                },
                "min_impurity_decrease": {
                    "data": 0.0,
                    "type": "VALUE"
                },
                "min_samples_leaf": {
                    "data": {
                        "case": "absolute",
                        "value": 1
                    },
                    "type": "VALUE"
                },
                "min_samples_split": {
                    "data": {
                        "case": "absolute",
                        "value": 2
                    },
                    "type": "VALUE"
                },
                "min_weight_fraction_leaf": {
                    "data": 0,
                    "type": "VALUE"
                },
                "n_cv": {
                    "data": {
                        "case": "int",
                        "value": 5
                    },
                    "type": "VALUE"
                },
                "n_estimators": {
                    "data": 2000,
                    "type": "VALUE"
                },
                "n_jobs": {
                    "data": {
                        "case": "limit",
                        "value": 4
                    },
                    "type": "VALUE"
                },
                "oob_score": {
                    "data": false,
                    "type": "VALUE"
                },
                "regressor_type": {
                    "data": "linear",
                    "type": "VALUE"
                },
                "return_result": {
                    "data": "new",
                    "type": "VALUE"
                },
                "use_input_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "use_output_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "use_semantic_types": {
                    "data": false,
                    "type": "VALUE"
                },
                "warm_start": {
                    "data": false,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "943a4b34-89c5-4296-bc1c-267f4887e2f9",
                "name": "lupi_rfsel.LupiRFSelClassifier",
                "python_path": "d3m.primitives.classification.lupi_rfsel.LupiRFSelClassifier",
                "version": "v6.0.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.5.produce",
                    "type": "CONTAINER"
                },
                "reference": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "name": "Construct pipeline predictions output",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        }
    ]
}
