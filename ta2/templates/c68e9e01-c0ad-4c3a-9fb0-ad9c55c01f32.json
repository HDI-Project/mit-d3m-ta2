{
    "created": "2019-11-22T21:35:26.231485Z",
    "digest": "a1efe726aa8af64a00627409199a04637ba0ddb6b68b03caa65126657f347da6",
    "id": "c68e9e01-c0ad-4c3a-9fb0-ad9c55c01f32",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.7.produce",
            "name": "output predictions"
        }
    ],
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "steps": [
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "bddea02d001c6633722c14643ec2a065fb4a977354ddbdf74282d076da77e530",
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "name": "Extract a DataFrame from a Dataset",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "column": {
                    "data": 2,
                    "type": "VALUE"
                },
                "max": {
                    "data": {
                        "case": "float",
                        "value": 2.0
                    },
                    "type": "VALUE"
                },
                "min": {
                    "data": {
                        "case": "float",
                        "value": 1.0
                    },
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "b0643e84377023fa0a8da2913b7b1ad4c82d8e5ecb51aeeefa520e75f89ba01b",
                "id": "8c246c78-3082-4ec9-844e-5c98fcc76f9d",
                "name": "Numeric range filter",
                "python_path": "d3m.primitives.data_preprocessing.numeric_range_filter.Common",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.1.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "column": {
                    "data": 4,
                    "type": "VALUE"
                },
                "max": {
                    "data": {
                        "case": "float",
                        "value": 2.0
                    },
                    "type": "VALUE"
                },
                "min": {
                    "data": {
                        "case": "float",
                        "value": 1.0
                    },
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "b0643e84377023fa0a8da2913b7b1ad4c82d8e5ecb51aeeefa520e75f89ba01b",
                "id": "8c246c78-3082-4ec9-844e-5c98fcc76f9d",
                "name": "Numeric range filter",
                "python_path": "d3m.primitives.data_preprocessing.numeric_range_filter.Common",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "columns": {
                    "data": [
                        1,
                        3,
                        5,
                        7,
                        9
                    ],
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "9df03c3d06957af821e17b6c49327aec2d9ac38b915759ffe77c1350af38da54",
                "id": "81d7e261-e25b-4721-b091-a31cd46e99ae",
                "name": "Extracts columns",
                "python_path": "d3m.primitives.data_transformation.extract_columns.Common",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "semantic_types": {
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ],
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "465edb8a31169e414dc8ad5b37c8c0bc07625aae9dc72fbfdc385ea10ed6d36f",
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "name": "Extracts columns by semantic type",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "method": {
                    "data": "counting",
                    "type": "VALUE"
                },
                "nbins": {
                    "data": 2,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "0499e9df1e41142a524f4fb7ce1749b4a84a79437d00644a0579f7b710c43afe",
                "id": "9d1a2e58-5f97-386c-babd-5a9b4e9b6d6c",
                "name": "STMBplus_auto feature selector",
                "python_path": "d3m.primitives.feature_selection.simultaneous_markov_blanket.AutoRPI",
                "version": "v2019.11.10"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.5.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "learning_rate": {
                    "data": 0.7142857142857143,
                    "type": "VALUE"
                },
                "n_estimators": {
                    "data": 14,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "8e23500c87b8755bb24fdf5da06c87319b1c032716cda27980c4e3d48cd3f90f",
                "id": "01d2c086-91bf-3ca5-b023-5139cf239c77",
                "name": "sklearn.ensemble.gradient_boosting.GradientBoostingClassifier",
                "python_path": "d3m.primitives.classification.gradient_boosting.SKlearn",
                "version": "2019.6.7"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.6.produce",
                    "type": "CONTAINER"
                },
                "reference": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "5144bad4fea16168f6667c991e137067721dd0573c68ab1bf172ead9e2c82869",
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "name": "Construct pipeline predictions output",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        }
    ]
}