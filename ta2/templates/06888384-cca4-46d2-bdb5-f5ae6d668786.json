{
    "created": "2019-11-22T15:58:03.707154Z",
    "digest": "0e9506c239f060bf213586e2d8161197c935dc370ebab7071bdca6a19ebe530a",
    "id": "06888384-cca4-46d2-bdb5-f5ae6d668786",
    "inputs": [
        {
            "name": "inputs"
        }
    ],
    "outputs": [
        {
            "data": "steps.9.produce",
            "name": "output predictions"
        }
    ],
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "steps": [
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "bddea02d001c6633722c14643ec2a065fb4a977354ddbdf74282d076da77e530",
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "name": "Extract a DataFrame from a Dataset",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "86f391bddc57bcab2d5af1728f442e7469298425a6678dc004312ed4a470f4d8",
                "id": "fc6bf33a-f3e0-3496-aa47-9a40289661bc",
                "name": "Data cleaning",
                "python_path": "d3m.primitives.data_cleaning.data_cleaning.Datacleaning",
                "version": "3.0.2"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.1.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "c162d57bc73b6f30a0d600af31136b5028fe0efcd852efc15b9ad2826a2f391f",
                "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
                "name": "Parses strings into their types",
                "python_path": "d3m.primitives.data_transformation.column_parser.Common",
                "version": "0.5.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "columns": {
                    "data": [
                        0,
                        1,
                        2,
                        3,
                        4,
                        5,
                        9,
                        12,
                        14,
                        15,
                        20,
                        21,
                        22,
                        26
                    ],
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "9df03c3d06957af821e17b6c49327aec2d9ac38b915759ffe77c1350af38da54",
                "id": "81d7e261-e25b-4721-b091-a31cd46e99ae",
                "name": "Extracts columns",
                "python_path": "d3m.primitives.data_transformation.extract_columns.Common",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "strategy": {
                    "data": "most_frequent",
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "adc79e644eec35eb9d616be755a5de83b27f66e42b04f6508a9ceb82d99cc739",
                "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
                "name": "sklearn.impute.SimpleImputer",
                "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
                "version": "2019.6.7"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "eb5dbe1ea5f37a394864ca802b93228333d60a1cd8f66901ccde8e1b71f98586",
                "id": "854727ed-c82c-3137-ac59-fd52bc9ba385",
                "name": "sklearn.preprocessing.data.RobustScaler",
                "python_path": "d3m.primitives.data_preprocessing.robust_scaler.SKlearn",
                "version": "2019.6.7"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "semantic_types": {
                    "data": [
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ],
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "465edb8a31169e414dc8ad5b37c8c0bc07625aae9dc72fbfdc385ea10ed6d36f",
                "id": "4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "name": "Extracts columns by semantic type",
                "python_path": "d3m.primitives.data_transformation.extract_columns_by_semantic_types.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.5.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.6.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "method": {
                    "data": "fullBayesian",
                    "type": "VALUE"
                },
                "nbins": {
                    "data": 2,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "0499e9df1e41142a524f4fb7ce1749b4a84a79437d00644a0579f7b710c43afe",
                "id": "9d1a2e58-5f97-386c-babd-5a9b4e9b6d6c",
                "name": "STMBplus_auto feature selector",
                "python_path": "d3m.primitives.feature_selection.simultaneous_markov_blanket.AutoRPI",
                "version": "v2019.11.10"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.7.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.6.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "N0": {
                    "data": 1,
                    "type": "VALUE"
                },
                "nbins": {
                    "data": 9,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "255b4cfbeb9f1e3177cda0a44005e14b61542cf1847f1f7ba047855a50f27b70",
                "id": "2fa0afb2-1b7b-462d-a7c9-11b44efe9eb0",
                "name": "Tree-Augmented Naive Bayes Classifier",
                "python_path": "d3m.primitives.classification.tree_augmented_naive_bayes.BayesianInfRPI",
                "version": "v2019.11.10"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.8.produce",
                    "type": "CONTAINER"
                },
                "reference": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "5144bad4fea16168f6667c991e137067721dd0573c68ab1bf172ead9e2c82869",
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "name": "Construct pipeline predictions output",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        }
    ]
}